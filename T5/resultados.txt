Sistema operativo utilizado
Linux debian12 6.1.0-18-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.76-1 (2024-02-01) x86_64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -Wall -Werror -pedantic -DNTHREADS -std=c18 -InKernel  test-disk.c disk.c nKernel/nthread.c nKernel/nutil.c nKernel/ntime.c nKernel/pss.c nKernel/sched-fcfs.c nKernel/sched-rr.c nKernel/sched-pri-1core.c nKernel/sched-fcfs-1core.c nKernel/sem.c nKernel/mutex-cond.c nKernel/nmsgs.c nKernel/nsystem.c -lm -lpthread -lrt -o disk.bin-san
--------------------------------------------
./disk.bin-san
Info: setting single-core FCFS scheduling

===============================
Test unitarios de la tarea 4 con timeout=-1
===============================

--- Primer test: un solo lector de disco ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: pedro libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: pedro libera disco
--- 2do. test: 2 lectores de disco ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: juan solicita pista 2
3: pedro libera disco
3: juan obtiene pista 2
4: pedro libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=-1)
3: pedro libera disco
3: juan obtiene pista 2
4: juan libera disco
--- 3er. test: 3 lectores de disco ordenados ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: juan solicita pista 2
3: diego solicita pista 3
4: pedro libera disco
4: juan obtiene pista 2
5: juan libera disco
5: diego obtiene pista 3
6: diego libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=-1)
3: diego solicita pista 3 (delay=-1)
4: pedro libera disco
4: juan obtiene pista 2
5: juan libera disco
5: diego obtiene pista 3
6: diego libera disco
--- 4to. test: 3 lectores de disco desordenados ---
Secuencia esperada:
1: pedro solicita pista 2
1: pedro obtiene pista 2
2: juan solicita pista 1
3: diego solicita pista 3
4: pedro libera disco
4: diego obtiene pista 3
5: diego libera disco
5: juan obtiene pista 1
6: juan libera disco
Secuencia obtenida =========>
1: pedro solicita pista 2 (delay=-1)
1: pedro obtiene pista 2
2: juan solicita pista 1 (delay=-1)
3: diego solicita pista 3 (delay=-1)
4: pedro libera disco
4: diego obtiene pista 3
5: diego libera disco
5: juan obtiene pista 1
6: juan libera disco
--- 5to. test: test del enunciado ---
Secuencia esperada:
1: pedro solicita pista 4
1: pedro obtiene pista 4
2: juan solicita pista 3
3: ana solicita pista 6
4: paco solicita pista 2
5: maria solicita pista 4
6: silvia solicita pista 1
7: diego solicita pista 10
8: pedro libera disco
8: maria obtiene pista 4
9: maria libera disco
9: ana obtiene pista 6
10: ana libera disco
10: diego obtiene pista 10
11: diego libera disco
11: silvia obtiene pista 1
12: silvia libera disco
12: paco obtiene pista 2
13: paco libera disco
13: juan obtiene pista 3
14: juan libera disco
Secuencia obtenida =========>
1: pedro solicita pista 4 (delay=-1)
1: pedro obtiene pista 4
2: juan solicita pista 3 (delay=-1)
3: ana solicita pista 6 (delay=-1)
4: paco solicita pista 2 (delay=-1)
5: maria solicita pista 4 (delay=-1)
6: silvia solicita pista 1 (delay=-1)
7: diego solicita pista 10 (delay=-1)
8: pedro libera disco
8: maria obtiene pista 4
9: maria libera disco
9: ana obtiene pista 6
10: ana libera disco
10: diego obtiene pista 10
11: diego libera disco
11: silvia obtiene pista 1
12: silvia libera disco
12: paco obtiene pista 2
13: paco libera disco
13: juan obtiene pista 3
14: juan libera disco
--- 6to. test: 8 lectores  ---
Secuencia esperada:
1: pedro solicita pista 5
1: pedro obtiene pista 5    (Trk=4)
2: juan solicita pista 3    (Trk=4 Q=juan:3)
3: ana solicita pista 7     (Trk=4 Q=ana:7 juan:3)
4: paco solicita pista 1    (Trk=4 Q=ana:7 paco:1 juan:3)
5: pedro libera disco
5: ana obtiene pista 7      (Trk=7 Q=paco:1 juan:3)
6: maria solicita pista 8   (Trk=7 Q=maria:8 paco:1 juan:3)
7: silvia solicita pista 2  (Trk=7 Q=maria:8 paco:1 silvia:2 juan:3)
8: ana libera disco
8: maria obtiene pista 8    (Trk=8 Q=paco:1 silvia:2 j:3)
9: maria libera disco
9: paco obtiene pista 1
10: diego solicita pista 4  (Trk=1 Q=silvia:2 juan:3 diego:4)
11: sonia solicita pista 6  (Trk=1 Q=silvia:2 juan:3 diego:4 sonia:6)
12: paco libera disco
12: silvia obtiene pista 2  (Trk=2 Q=juan:3 diego:4 sonia:6)
13: silvia libera disco
13: juan obtiene pista 3    (Trk=3 diego:4 sonia:6)
14: juan libera disco
14: diego obtiene pista 4   (Trk=4 sonia:6)
15: diego libera disco
15: sonia obtiene pista 6   (Trk=6 Q=)
16: sonia libera disco
Secuencia obtenida =========>
1: pedro solicita pista 5 (delay=-1)
1: pedro obtiene pista 5
2: juan solicita pista 3 (delay=-1)
3: ana solicita pista 7 (delay=-1)
4: paco solicita pista 1 (delay=-1)
5: pedro libera disco
5: ana obtiene pista 7
6: maria solicita pista 8 (delay=-1)
7: silvia solicita pista 2 (delay=-1)
8: ana libera disco
8: maria obtiene pista 8
9: maria libera disco
9: paco obtiene pista 1
10: diego solicita pista 4 (delay=-1)
11: sonia solicita pista 6 (delay=-1)
12: paco libera disco
12: silvia obtiene pista 2
13: silvia libera disco
13: juan obtiene pista 3
14: juan libera disco
14: diego obtiene pista 4
15: diego libera disco
15: sonia obtiene pista 6
16: sonia libera disco
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 96
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-san "utt"
Info: setting single-core FCFS scheduling

===============================
Test unitarios de los timeouts
===============================

--- Primer test: 2 lectores, segundo con timeout vencido ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=1)
juan no obtiene pista 2
4: pedro libera disco
Aprobado
--- 2do. test: 3 lectores, tercero con timeout vencido ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=5)
3: diego solicita pista 3 (delay=1)
diego no obtiene pista 3
5: pedro libera disco
5: juan obtiene pista 2
6: juan libera disco
--- 3er. test: 3 lectores, segundo con timeout vencido ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=1)
juan no obtiene pista 2
3: diego solicita pista 3 (delay=3)
5: pedro libera disco
5: diego obtiene pista 3
6: diego libera disco
--- 4to. test: 3 lectores, segundo y tercero vencen ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=2)
3: diego solicita pista 3 (delay=1)
juan no obtiene pista 2
diego no obtiene pista 3
5: pedro libera disco
--- 5to. test: 4 lectores, segundo y cuarto vencen ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=3)
3: diego solicita pista 3 (delay=4)
4: paco solicita pista 4 (delay=2)
juan no obtiene pista 2
6: pedro libera disco
6: diego obtiene pista 3
paco no obtiene pista 4
7: diego libera disco
--- 6to. test: 10 lectores, todos vencen ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: undef solicita pista 2 (delay=1)
2: undef solicita pista 3 (delay=1)
2: undef solicita pista 4 (delay=1)
2: undef solicita pista 5 (delay=1)
2: undef solicita pista 6 (delay=1)
2: undef solicita pista 7 (delay=1)
2: undef solicita pista 8 (delay=1)
2: undef solicita pista 9 (delay=1)
2: undef solicita pista 10 (delay=1)
2: undef solicita pista 11 (delay=1)
undef no obtiene pista 2
undef no obtiene pista 3
undef no obtiene pista 4
undef no obtiene pista 5
undef no obtiene pista 6
undef no obtiene pista 7
undef no obtiene pista 8
undef no obtiene pista 9
undef no obtiene pista 10
undef no obtiene pista 11
4: pedro libera disco
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 91
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-san "npt"
Info: setting single-core FCFS scheduling

===============================
Test de robustez non preemptive
Verifica exclusion mutua y orden
20 lectores de disco
===============================

Info: setting 1-core FCFS scheduling
10 iteraciones completadas en lector 0 de 100
20 iteraciones completadas en lector 0 de 100
30 iteraciones completadas en lector 0 de 100
40 iteraciones completadas en lector 0 de 100
50 iteraciones completadas en lector 0 de 100
60 iteraciones completadas en lector 0 de 100
70 iteraciones completadas en lector 0 de 100
80 iteraciones completadas en lector 0 de 100
90 iteraciones completadas en lector 0 de 100
Nro. de threads: 20
Total solicitudes: 2000
Largo promedio de la cola del disco: 18.275251
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 16019
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-san "ut(1000)"
Info: setting single-core FCFS scheduling

===============================
Test unitarios de la tarea 4 con timeout=1000
===============================

--- Primer test: un solo lector de disco ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: pedro libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=1000)
1: pedro obtiene pista 1
2: pedro libera disco
--- 2do. test: 2 lectores de disco ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: juan solicita pista 2
3: pedro libera disco
3: juan obtiene pista 2
4: pedro libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=1000)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=1000)
3: pedro libera disco
3: juan obtiene pista 2
4: juan libera disco
--- 3er. test: 3 lectores de disco ordenados ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: juan solicita pista 2
3: diego solicita pista 3
4: pedro libera disco
4: juan obtiene pista 2
5: juan libera disco
5: diego obtiene pista 3
6: diego libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=1000)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=1000)
3: diego solicita pista 3 (delay=1000)
4: pedro libera disco
4: juan obtiene pista 2
5: juan libera disco
5: diego obtiene pista 3
6: diego libera disco
--- 4to. test: 3 lectores de disco desordenados ---
Secuencia esperada:
1: pedro solicita pista 2
1: pedro obtiene pista 2
2: juan solicita pista 1
3: diego solicita pista 3
4: pedro libera disco
4: diego obtiene pista 3
5: diego libera disco
5: juan obtiene pista 1
6: juan libera disco
Secuencia obtenida =========>
1: pedro solicita pista 2 (delay=1000)
1: pedro obtiene pista 2
2: juan solicita pista 1 (delay=1000)
3: diego solicita pista 3 (delay=1000)
4: pedro libera disco
4: diego obtiene pista 3
5: diego libera disco
5: juan obtiene pista 1
6: juan libera disco
--- 5to. test: test del enunciado ---
Secuencia esperada:
1: pedro solicita pista 4
1: pedro obtiene pista 4
2: juan solicita pista 3
3: ana solicita pista 6
4: paco solicita pista 2
5: maria solicita pista 4
6: silvia solicita pista 1
7: diego solicita pista 10
8: pedro libera disco
8: maria obtiene pista 4
9: maria libera disco
9: ana obtiene pista 6
10: ana libera disco
10: diego obtiene pista 10
11: diego libera disco
11: silvia obtiene pista 1
12: silvia libera disco
12: paco obtiene pista 2
13: paco libera disco
13: juan obtiene pista 3
14: juan libera disco
Secuencia obtenida =========>
1: pedro solicita pista 4 (delay=1000)
1: pedro obtiene pista 4
2: juan solicita pista 3 (delay=1000)
3: ana solicita pista 6 (delay=1000)
4: paco solicita pista 2 (delay=1000)
5: maria solicita pista 4 (delay=1000)
6: silvia solicita pista 1 (delay=1000)
7: diego solicita pista 10 (delay=1000)
8: pedro libera disco
8: maria obtiene pista 4
9: maria libera disco
9: ana obtiene pista 6
10: ana libera disco
10: diego obtiene pista 10
11: diego libera disco
11: silvia obtiene pista 1
12: silvia libera disco
12: paco obtiene pista 2
13: paco libera disco
13: juan obtiene pista 3
14: juan libera disco
--- 6to. test: 8 lectores  ---
Secuencia esperada:
1: pedro solicita pista 5
1: pedro obtiene pista 5    (Trk=4)
2: juan solicita pista 3    (Trk=4 Q=juan:3)
3: ana solicita pista 7     (Trk=4 Q=ana:7 juan:3)
4: paco solicita pista 1    (Trk=4 Q=ana:7 paco:1 juan:3)
5: pedro libera disco
5: ana obtiene pista 7      (Trk=7 Q=paco:1 juan:3)
6: maria solicita pista 8   (Trk=7 Q=maria:8 paco:1 juan:3)
7: silvia solicita pista 2  (Trk=7 Q=maria:8 paco:1 silvia:2 juan:3)
8: ana libera disco
8: maria obtiene pista 8    (Trk=8 Q=paco:1 silvia:2 j:3)
9: maria libera disco
9: paco obtiene pista 1
10: diego solicita pista 4  (Trk=1 Q=silvia:2 juan:3 diego:4)
11: sonia solicita pista 6  (Trk=1 Q=silvia:2 juan:3 diego:4 sonia:6)
12: paco libera disco
12: silvia obtiene pista 2  (Trk=2 Q=juan:3 diego:4 sonia:6)
13: silvia libera disco
13: juan obtiene pista 3    (Trk=3 diego:4 sonia:6)
14: juan libera disco
14: diego obtiene pista 4   (Trk=4 sonia:6)
15: diego libera disco
15: sonia obtiene pista 6   (Trk=6 Q=)
16: sonia libera disco
Secuencia obtenida =========>
1: pedro solicita pista 5 (delay=1000)
1: pedro obtiene pista 5
2: juan solicita pista 3 (delay=1000)
3: ana solicita pista 7 (delay=1000)
4: paco solicita pista 1 (delay=1000)
5: pedro libera disco
5: ana obtiene pista 7
6: maria solicita pista 8 (delay=1000)
7: silvia solicita pista 2 (delay=1000)
8: ana libera disco
8: maria obtiene pista 8
9: maria libera disco
9: paco obtiene pista 1
10: diego solicita pista 4 (delay=1000)
11: sonia solicita pista 6 (delay=1000)
12: paco libera disco
12: silvia obtiene pista 2
13: silvia libera disco
13: juan obtiene pista 3
14: juan libera disco
14: diego obtiene pista 4
15: diego libera disco
15: sonia obtiene pista 6
16: sonia libera disco
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 96
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-san "pt(-1)"
Info: setting single-core FCFS scheduling

===============================
Test de robustez preemptive con timeout= -1
Solo verifica la exclusion mutua
20 lectores de disco
===============================

10 iteraciones completadas en lector 0 de 100
20 iteraciones completadas en lector 0 de 100
30 iteraciones completadas en lector 0 de 100
40 iteraciones completadas en lector 0 de 100
50 iteraciones completadas en lector 0 de 100
60 iteraciones completadas en lector 0 de 100
70 iteraciones completadas en lector 0 de 100
80 iteraciones completadas en lector 0 de 100
90 iteraciones completadas en lector 0 de 100
100 iteraciones completadas en lector 0 de 100
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 40
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-san "pt(1000)"
Info: setting single-core FCFS scheduling

===============================
Test de robustez preemptive con timeout= 1000
Solo verifica la exclusion mutua
20 lectores de disco
===============================

10 iteraciones completadas en lector 0 de 100
20 iteraciones completadas en lector 0 de 100
30 iteraciones completadas en lector 0 de 100
40 iteraciones completadas en lector 0 de 100
50 iteraciones completadas en lector 0 de 100
60 iteraciones completadas en lector 0 de 100
70 iteraciones completadas en lector 0 de 100
80 iteraciones completadas en lector 0 de 100
90 iteraciones completadas en lector 0 de 100
100 iteraciones completadas en lector 0 de 100
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 40
Info: Implicit context changes = 0
==== run-g ====
gcc -g -Wall -Werror -pedantic -DNTHREADS -std=c18 -InKernel  test-disk.c disk.c nKernel/nthread.c nKernel/nutil.c nKernel/ntime.c nKernel/pss.c nKernel/sched-fcfs.c nKernel/sched-rr.c nKernel/sched-pri-1core.c nKernel/sched-fcfs-1core.c nKernel/sem.c nKernel/mutex-cond.c nKernel/nmsgs.c nKernel/nsystem.c -lm -lpthread -lrt -o disk.bin-g
--------------------------------------------
./disk.bin-g "ut(1000)"
Info: setting single-core FCFS scheduling

===============================
Test unitarios de la tarea 4 con timeout=1000
===============================

--- Primer test: un solo lector de disco ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: pedro libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=1000)
1: pedro obtiene pista 1
2: pedro libera disco
--- 2do. test: 2 lectores de disco ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: juan solicita pista 2
3: pedro libera disco
3: juan obtiene pista 2
4: pedro libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=1000)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=1000)
3: pedro libera disco
3: juan obtiene pista 2
4: juan libera disco
--- 3er. test: 3 lectores de disco ordenados ---
Secuencia esperada:
1: pedro solicita pista 1
1: pedro obtiene pista 1
2: juan solicita pista 2
3: diego solicita pista 3
4: pedro libera disco
4: juan obtiene pista 2
5: juan libera disco
5: diego obtiene pista 3
6: diego libera disco
Secuencia obtenida =========>
1: pedro solicita pista 1 (delay=1000)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=1000)
3: diego solicita pista 3 (delay=1000)
4: pedro libera disco
4: juan obtiene pista 2
5: juan libera disco
5: diego obtiene pista 3
6: diego libera disco
--- 4to. test: 3 lectores de disco desordenados ---
Secuencia esperada:
1: pedro solicita pista 2
1: pedro obtiene pista 2
2: juan solicita pista 1
3: diego solicita pista 3
4: pedro libera disco
4: diego obtiene pista 3
5: diego libera disco
5: juan obtiene pista 1
6: juan libera disco
Secuencia obtenida =========>
1: pedro solicita pista 2 (delay=1000)
1: pedro obtiene pista 2
2: juan solicita pista 1 (delay=1000)
3: diego solicita pista 3 (delay=1000)
4: pedro libera disco
4: diego obtiene pista 3
5: diego libera disco
5: juan obtiene pista 1
6: juan libera disco
--- 5to. test: test del enunciado ---
Secuencia esperada:
1: pedro solicita pista 4
1: pedro obtiene pista 4
2: juan solicita pista 3
3: ana solicita pista 6
4: paco solicita pista 2
5: maria solicita pista 4
6: silvia solicita pista 1
7: diego solicita pista 10
8: pedro libera disco
8: maria obtiene pista 4
9: maria libera disco
9: ana obtiene pista 6
10: ana libera disco
10: diego obtiene pista 10
11: diego libera disco
11: silvia obtiene pista 1
12: silvia libera disco
12: paco obtiene pista 2
13: paco libera disco
13: juan obtiene pista 3
14: juan libera disco
Secuencia obtenida =========>
1: pedro solicita pista 4 (delay=1000)
1: pedro obtiene pista 4
2: juan solicita pista 3 (delay=1000)
3: ana solicita pista 6 (delay=1000)
4: paco solicita pista 2 (delay=1000)
5: maria solicita pista 4 (delay=1000)
6: silvia solicita pista 1 (delay=1000)
7: diego solicita pista 10 (delay=1000)
8: pedro libera disco
8: maria obtiene pista 4
9: maria libera disco
9: ana obtiene pista 6
10: ana libera disco
10: diego obtiene pista 10
11: diego libera disco
11: silvia obtiene pista 1
12: silvia libera disco
12: paco obtiene pista 2
13: paco libera disco
13: juan obtiene pista 3
14: juan libera disco
--- 6to. test: 8 lectores  ---
Secuencia esperada:
1: pedro solicita pista 5
1: pedro obtiene pista 5    (Trk=4)
2: juan solicita pista 3    (Trk=4 Q=juan:3)
3: ana solicita pista 7     (Trk=4 Q=ana:7 juan:3)
4: paco solicita pista 1    (Trk=4 Q=ana:7 paco:1 juan:3)
5: pedro libera disco
5: ana obtiene pista 7      (Trk=7 Q=paco:1 juan:3)
6: maria solicita pista 8   (Trk=7 Q=maria:8 paco:1 juan:3)
7: silvia solicita pista 2  (Trk=7 Q=maria:8 paco:1 silvia:2 juan:3)
8: ana libera disco
8: maria obtiene pista 8    (Trk=8 Q=paco:1 silvia:2 j:3)
9: maria libera disco
9: paco obtiene pista 1
10: diego solicita pista 4  (Trk=1 Q=silvia:2 juan:3 diego:4)
11: sonia solicita pista 6  (Trk=1 Q=silvia:2 juan:3 diego:4 sonia:6)
12: paco libera disco
12: silvia obtiene pista 2  (Trk=2 Q=juan:3 diego:4 sonia:6)
13: silvia libera disco
13: juan obtiene pista 3    (Trk=3 diego:4 sonia:6)
14: juan libera disco
14: diego obtiene pista 4   (Trk=4 sonia:6)
15: diego libera disco
15: sonia obtiene pista 6   (Trk=6 Q=)
16: sonia libera disco
Secuencia obtenida =========>
1: pedro solicita pista 5 (delay=1000)
1: pedro obtiene pista 5
2: juan solicita pista 3 (delay=1000)
3: ana solicita pista 7 (delay=1000)
4: paco solicita pista 1 (delay=1000)
5: pedro libera disco
5: ana obtiene pista 7
6: maria solicita pista 8 (delay=1000)
7: silvia solicita pista 2 (delay=1000)
8: ana libera disco
8: maria obtiene pista 8
9: maria libera disco
9: paco obtiene pista 1
10: diego solicita pista 4 (delay=1000)
11: sonia solicita pista 6 (delay=1000)
12: paco libera disco
12: silvia obtiene pista 2
13: silvia libera disco
13: juan obtiene pista 3
14: juan libera disco
14: diego obtiene pista 4
15: diego libera disco
15: sonia obtiene pista 6
16: sonia libera disco
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 96
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-g "utt"
Info: setting single-core FCFS scheduling

===============================
Test unitarios de los timeouts
===============================

--- Primer test: 2 lectores, segundo con timeout vencido ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=1)
juan no obtiene pista 2
4: pedro libera disco
Aprobado
--- 2do. test: 3 lectores, tercero con timeout vencido ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=5)
3: diego solicita pista 3 (delay=1)
diego no obtiene pista 3
5: pedro libera disco
5: juan obtiene pista 2
6: juan libera disco
--- 3er. test: 3 lectores, segundo con timeout vencido ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=1)
juan no obtiene pista 2
3: diego solicita pista 3 (delay=3)
5: pedro libera disco
5: diego obtiene pista 3
6: diego libera disco
--- 4to. test: 3 lectores, segundo y tercero vencen ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=2)
3: diego solicita pista 3 (delay=1)
juan no obtiene pista 2
diego no obtiene pista 3
5: pedro libera disco
--- 5to. test: 4 lectores, segundo y cuarto vencen ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: juan solicita pista 2 (delay=3)
3: diego solicita pista 3 (delay=4)
4: paco solicita pista 4 (delay=2)
juan no obtiene pista 2
6: pedro libera disco
6: diego obtiene pista 3
paco no obtiene pista 4
7: diego libera disco
--- 6to. test: 10 lectores, todos vencen ---
1: pedro solicita pista 1 (delay=-1)
1: pedro obtiene pista 1
2: undef solicita pista 2 (delay=1)
2: undef solicita pista 3 (delay=1)
2: undef solicita pista 4 (delay=1)
2: undef solicita pista 5 (delay=1)
2: undef solicita pista 6 (delay=1)
2: undef solicita pista 7 (delay=1)
2: undef solicita pista 8 (delay=1)
2: undef solicita pista 9 (delay=1)
2: undef solicita pista 10 (delay=1)
2: undef solicita pista 11 (delay=1)
undef no obtiene pista 2
undef no obtiene pista 3
undef no obtiene pista 4
undef no obtiene pista 5
undef no obtiene pista 6
undef no obtiene pista 7
undef no obtiene pista 8
undef no obtiene pista 9
undef no obtiene pista 10
undef no obtiene pista 11
4: pedro libera disco
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 91
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-g "pt(1000)"
Info: setting single-core FCFS scheduling

===============================
Test de robustez preemptive con timeout= 1000
Solo verifica la exclusion mutua
20 lectores de disco
===============================

10 iteraciones completadas en lector 0 de 100
20 iteraciones completadas en lector 0 de 100
30 iteraciones completadas en lector 0 de 100
40 iteraciones completadas en lector 0 de 100
50 iteraciones completadas en lector 0 de 100
60 iteraciones completadas en lector 0 de 100
70 iteraciones completadas en lector 0 de 100
80 iteraciones completadas en lector 0 de 100
90 iteraciones completadas en lector 0 de 100
100 iteraciones completadas en lector 0 de 100
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 40
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-g "npt"
Info: setting single-core FCFS scheduling

===============================
Test de robustez non preemptive
Verifica exclusion mutua y orden
20 lectores de disco
===============================

Info: setting 1-core FCFS scheduling
10 iteraciones completadas en lector 0 de 100
20 iteraciones completadas en lector 0 de 100
30 iteraciones completadas en lector 0 de 100
40 iteraciones completadas en lector 0 de 100
50 iteraciones completadas en lector 0 de 100
60 iteraciones completadas en lector 0 de 100
70 iteraciones completadas en lector 0 de 100
80 iteraciones completadas en lector 0 de 100
90 iteraciones completadas en lector 0 de 100
Nro. de threads: 20
Total solicitudes: 2000
Largo promedio de la cola del disco: 18.275251
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 1
Info: total context changes = 16019
Info: Implicit context changes = 0
--------------------------------------------
./disk.bin-g -slice 1 -ncores 4 "pt(1000)"
Info: setting 4-core round robin scheduling

===============================
Test de robustez preemptive con timeout= 1000
Solo verifica la exclusion mutua
20 lectores de disco
===============================

10 iteraciones completadas en lector 0 de 100
20 iteraciones completadas en lector 0 de 100
30 iteraciones completadas en lector 0 de 100
40 iteraciones completadas en lector 0 de 100
50 iteraciones completadas en lector 0 de 100
60 iteraciones completadas en lector 0 de 100
70 iteraciones completadas en lector 0 de 100
80 iteraciones completadas en lector 0 de 100
90 iteraciones completadas en lector 0 de 100
100 iteraciones completadas en lector 0 de 100
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 4
Info: total context changes = 1922
Info: Implicit context changes = 5
==== run ====
gcc -g -O -DOPT=1 -Wall -Werror -pedantic -DNTHREADS -std=c18 -InKernel  test-disk.c disk.c nKernel/nthread.c nKernel/nutil.c nKernel/ntime.c nKernel/pss.c nKernel/sched-fcfs.c nKernel/sched-rr.c nKernel/sched-pri-1core.c nKernel/sched-fcfs-1core.c nKernel/sem.c nKernel/mutex-cond.c nKernel/nmsgs.c nKernel/nsystem.c -lm -lpthread -lrt -o disk.bin
--------------------------------------------
./disk.bin -slice 1 -ncores 4 "pt(1000)"
Info: setting 4-core round robin scheduling

===============================
Test de robustez preemptive con timeout= 1000
Solo verifica la exclusion mutua
20 lectores de disco
===============================

10 iteraciones completadas en lector 0 de 100
20 iteraciones completadas en lector 0 de 100
30 iteraciones completadas en lector 0 de 100
40 iteraciones completadas en lector 0 de 100
50 iteraciones completadas en lector 0 de 100
60 iteraciones completadas en lector 0 de 100
70 iteraciones completadas en lector 0 de 100
80 iteraciones completadas en lector 0 de 100
90 iteraciones completadas en lector 0 de 100
100 iteraciones completadas en lector 0 de 100
Aprobado
Felicitaciones: paso todos los tests.
Info: Number of cores = 4
Info: total context changes = 1782
Info: Implicit context changes = 2
